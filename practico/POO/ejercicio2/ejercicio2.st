Object subclass: #Micro	instanceVariableNames: 'n m cantN cantM'	classVariableNames: ''	package: 'ejercicio2'!!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!cantM	^ cantM! !!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!m	^ m! !!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!m: anObject	m := anObject! !!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!cantN	^ cantN! !!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!cantM: anObject	cantM := anObject! !!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!cantN: anObject	cantN := anObject! !!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!n	^ n! !!Micro methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:25'!n: anObject	n := anObject! !!Micro methodsFor: 'operaciones' stamp: 'initialze 7/2/2022 13:01'!lugarLibreParados	^ m-cantM.! !!Micro methodsFor: 'operaciones' stamp: 'initialze 7/2/2022 13:01'!asientosLibres	^ n-cantN.! !!Micro methodsFor: 'operaciones' stamp: 'initialze 7/2/2022 13:12'!subir: unPasajero	"el self dice para llamar al mismo micro"	"pregunta si acepta subir a un pasajeor al micro actual"	(unPasajero aceptaSubir: self) ifTrue: [ 			(self asientosLibres > 0)ifTrue: [cantN := cantN  + 1.^true ].			(self lugarLibreParados  > 0)ifTrue: [cantM := cantM  + 1.^true ]. 			].	^'mensaje de error como string'! !!Micro methodsFor: 'initialization' stamp: 'initialze 7/2/2022 12:30'!initialize 	n:=0.	m:= 0.	cantN := 0. 	cantM:= 0. 	! !!Micro methodsFor: 'initialization' stamp: 'initialze 7/2/2022 12:48'!asString	^'Cant asientos: ', n asString ,', Cantid de lugar parados: ', m asString ,', cant de pasajeros totales: ', (cantN +cantM ) asString .	! !Object subclass: #Pasajero	instanceVariableNames: 'tipo jefe x'	classVariableNames: ''	package: 'ejercicio2'!!Pasajero methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:54'!jefe	^ jefe! !!Pasajero methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:54'!x	^ x! !!Pasajero methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:54'!tipo	^ tipo! !!Pasajero methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:54'!jefe: anObject	jefe := anObject! !!Pasajero methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:54'!tipo: anObject	tipo := anObject! !!Pasajero methodsFor: 'accessing' stamp: 'initialze 7/2/2022 12:54'!x: anObject	x := anObject! !!Pasajero methodsFor: 'initialization' stamp: 'initialze 7/2/2022 12:55'!initialize	tipo := 0.	jefe := nil.	x :=0.! !!Pasajero methodsFor: 'converting' stamp: 'initialze 7/2/2022 12:57'!asString 	^'Pasajero tipo: ' , tipo asString.! !!Pasajero methodsFor: 'operaciones' stamp: 'initialze 7/2/2022 13:04'!aceptaSubir: unMicro	 (tipo = 0) ifTrue: [ ^true ].	(tipo = 1) ifTrue: [ ^(unMicro asientosLibres > 0) ].	(tipo = 2) ifTrue: [ ^(unMicro lugarLibreParados + unMicro asientosLibres) > x ].	(tipo = 3 ) ifTrue: [ ^(jefe aceptaSubir: unMicro ) ].	^false! !