Object subclass: #Punto	instanceVariableNames: 'x y'	classVariableNames: ''	package: 'ejercio1'!!Punto methodsFor: 'control' stamp: 'initialze 7/2/2022 11:20'!distanciaAlOringe	"Permite calcula la distancia la origen de cordenada"	"binario + , los parentesis son importantes"	"El unario tiene presedencia sobre el binario"	^(x squared + y squared ) sqrt ! !!Punto methodsFor: 'control' stamp: 'initialze 7/2/2022 11:28'!cuadrante	"Permite conocer el cuadrante donde se ubica el punto"	|var|	var:=nil.	"Conviene hacer condicionales para las variables a que hace encandenamiento"	((x>=0) and: (y>=0)) ifTrue: [ var:= 1 ].	((x<0) and: (y>=0)) ifTrue: [ var:= 2 ].	((x<0) and: (y<0)) ifTrue: [ var:= 3 ].	((x>=0) and: (y<0)) ifTrue: [ var:= 4 ].	^var! !!Punto methodsFor: 'initialization' stamp: 'initialze 7/2/2022 10:58'!initialize 	x := 0.0.	y := 0.0.! !!Punto methodsFor: 'initialization' stamp: 'initialze 7/2/2022 10:59'!asString 	^ '(', x asString, ';', y asString, ')'! !!Punto methodsFor: 'accessing' stamp: 'initialze 7/2/2022 10:58'!x: anObject	x := anObject! !!Punto methodsFor: 'accessing' stamp: 'initialze 7/2/2022 10:58'!y: anObject	y := anObject! !!Punto methodsFor: 'accessing' stamp: 'initialze 7/2/2022 10:58'!y	^ y! !!Punto methodsFor: 'accessing' stamp: 'initialze 7/2/2022 10:58'!x	^ x! !Object subclass: #Recta	instanceVariableNames: 'm punto'	classVariableNames: ''	package: 'ejercio1'!!Recta methodsFor: 'accessing' stamp: 'initialze 7/2/2022 11:29'!punto	^ punto! !!Recta methodsFor: 'accessing' stamp: 'initialze 7/2/2022 11:29'!punto: anObject	punto := anObject! !!Recta methodsFor: 'accessing' stamp: 'initialze 7/2/2022 11:29'!m	^ m! !!Recta methodsFor: 'accessing' stamp: 'initialze 7/2/2022 11:29'!m: anObject	m := anObject! !!Recta methodsFor: 'control' stamp: 'initialze 7/2/2022 11:51'!ordenada	^punto y - ( m * punto x)! !!Recta methodsFor: 'control' stamp: 'initialze 7/2/2022 11:54'!existe: unPunto	"permite determeinar si un punto pertenece o no a la recta"	^ (unPunto y) = ((m*unPunto x)- self ordenada )! !!Recta methodsFor: 'initialization' stamp: 'initialze 7/2/2022 11:30'!initialize 	m:=0.0.	punto := Punto new.! !!Recta methodsFor: 'initialization' stamp: 'initialze 7/2/2022 11:49'!mostrarFormula	"Es como el asString"	"self hace referencia al objeto que esta ejecutnado este metodo  es como el .this"	"sirve para invocar metodos de la misma clase"	^ 'y=', m asString , 'x +', self ordenada asString! !